import numpy as np
from numpy.linalg import matrix_power
import matplotlib.pyplot as plt

import pydtmc as dtmc

from numpy import linalg  as la

from scipy import linalg  as scla

success_prob = 0.48
failure_prob = 1 - success_prob

p = np.array([  [1, 0,0,0,0,0,0,0,0,0,0 ], 
                [failure_prob, 0,success_prob,0,0,0,0,0,0,0 ,0], 
                [0, failure_prob, 0,success_prob,0,0,0,0,0,0,0], 
                [0, 0,failure_prob, 0,success_prob,0,0,0,0,0,0], 
                [0,0,0, failure_prob, 0,success_prob,0,0,0,0,0], 
                [0,0,0,0, failure_prob, 0,success_prob,0,0,0,0], 
                [0,0,0,0,0, failure_prob, 0,success_prob,0,0,0], 
                [0,0,0,0,0,0, failure_prob, 0,success_prob,0,0], 
                [0,0,0,0,0,0,0, failure_prob, 0,success_prob,0],
                [0,0,0,0,0,0,0, 0,failure_prob, 0,success_prob], 
                [0,0,0,0,0,0,0, 0, 0,0,1], 
                ]) 

mc = dtmc.MarkovChain(p, ['0', '1', '2','3','4','5','6','7','8','9','10', ])

# print(mc)
    

print(mc.absorption_probabilities())
print(mc.walk(20))

